{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-18T20:16:21.991Z",
    "end": "2023-04-18T20:16:22.010Z",
    "duration": 19,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "892ece16-6d91-4d54-9615-7650269e311b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1de2988b-0f82-4e4c-8dee-545922f47b2d",
          "title": "DELETE /api/v1/blogs/:id",
          "fullFile": "/Users/swarajjain/Desktop/Project/Newton Project/Own/Allow Only Creator 1/Allow Only Creator 1/__tests__/test.js",
          "file": "/__tests__/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "DELETE with Non-Existing id",
              "fullTitle": "DELETE /api/v1/blogs/:id DELETE with Non-Existing id",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const url = '/api/v1/blogs/1000'\nconst res = await chai.request(app).delete(url).send({\n  'request_by' : 'me'\n});\nexpect(res).to.have.status(404);\nexpect(res.body).to.be.an('object');\nexpect(res.body.status).to.equal('Failed');",
              "err": {},
              "uuid": "3d41a15d-fb25-4b2e-924a-730746340921",
              "parentUUID": "1de2988b-0f82-4e4c-8dee-545922f47b2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE with Existing id by Non-owner",
              "fullTitle": "DELETE /api/v1/blogs/:id DELETE with Existing id by Non-owner",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const url = '/api/v1/blogs/2'\nconst res = await chai.request(app).delete(url).send({\n  'request_by' : 'abc'\n});\nexpect(res).to.have.status(403);\nexpect(res.body).to.be.an('object');\nexpect(res.body.status).to.equal('Failed');\nexpect(res.body.message).to.equal('Access Denied');",
              "err": {},
              "uuid": "e096b3a2-878d-40c4-9268-fef50638753d",
              "parentUUID": "1de2988b-0f82-4e4c-8dee-545922f47b2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE with Existing id by owner",
              "fullTitle": "DELETE /api/v1/blogs/:id DELETE with Existing id by owner",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const url = '/api/v1/blogs/2'\nconst res = await chai.request(app).delete(url).send({\n  'request_by' : 'xyz10'\n});\nexpect(res).to.have.status(200);\nexpect(res.body).to.be.an('object');\nexpect(res.body.status).to.equal('Success');\nconst blogs = JSON.parse(fs.readFileSync(`data/blogs.json`));\nconst userDetailToDelete = blogs.find(\n  (detailTODelete) => detailTODelete.id === 2\n);\nexpect(userDetailToDelete).to.equal(undefined);",
              "err": {},
              "uuid": "a96cc0e2-51c8-4427-9f06-579c5de32b1e",
              "parentUUID": "1de2988b-0f82-4e4c-8dee-545922f47b2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d41a15d-fb25-4b2e-924a-730746340921",
            "e096b3a2-878d-40c4-9268-fef50638753d",
            "a96cc0e2-51c8-4427-9f06-579c5de32b1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}